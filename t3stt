_G.PRED = 0.025
local Aiming = loadstring(game:HttpGet("https://github.com/ravefrr/s1lentaim/raw/main/FOV55"))()
Aiming.TeamCheck(false)
Aiming.ShowFOV = true
Aiming.FOV = 55

local Workspace = game:GetService("Workspace")
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")
 
local LocalPlayer = Players.LocalPlayer
local Mouse = LocalPlayer:GetMouse()
local CurrentCamera = Workspace.CurrentCamera
 
local DaHoodSettings = {
    SilentAim = true,
    AimLock = false,
    Prediction = 0.121,
    AimLockKeybind = Enum.KeyCode.E
}
getgenv().DaHoodSettings = DaHoodSettings
 
function Aiming.Check()
    if not (Aiming.Enabled == true and Aiming.Selected ~= LocalPlayer and Aiming.SelectedPart ~= nil) then
        return false
    end
 
    local Character = Aiming.Character(Aiming.Selected)
    local KOd = Character:WaitForChild("BodyEffects")["K.O"].Value
    local Grabbed = Character:FindFirstChild("GRABBING_CONSTRAINT") ~= nil
 
    if (KOd or Grabbed) then
        return false
    end
 
    return true
end
 
local __index
__index = hookmetamethod(game, "__index", function(t, k)

    if (t:IsA("Mouse") and (k == "Hit" or k == "Target") and Aiming.Check()) then

        local SelectedPart = Aiming.SelectedPart
 

        if (DaHoodSettings.SilentAim and (k == "Hit" or k == "Target")) then

            local Hit = SelectedPart.CFrame + (SelectedPart.Velocity * DaHoodSettings.Prediction)
 

            return (k == "Hit" and Hit or SelectedPart)
        end
    end
 

    return __index(t, k)
end)
 
local player = game.Players.LocalPlayer
local mouse = player:GetMouse()
 
mouse.KeyDown:Connect(function(key)
    if key == "v" then
        if Aiming.Enabled == false then
        Aiming.Enabled = true
        else
        Aiming.Enabled = false
        end
    end
end)
 
 
RunService.RenderStepped:Connect(function()
 
    local ping = game:GetService("Stats").Network.ServerStatsItem["Data Ping"]:GetValueString()
    local Value = tostring(ping)
    local pingValue = Value:split(" ")
    local PingNumber = pingValue[1]
 
    DaHoodSettings.Prediction = PingNumber / 1000 + _G.PRED
 
                    if Aiming.Character.Humanoid.Jump == true and AimlockTarget.Character.Humanoid.FloorMaterial == Enum.Material.Air then
                    Aiming.TargetPart = "RightFoot"
                else
                    Aiming.Character:WaitForChild("Humanoid").StateChanged:Connect(function(new)
 
                    if new == Enum.HumanoidStateType.Freefall then
                    Aiming.TargetPart = "RightFoot"
                    else
 
                    Aiming.TargetPart = Aiming.SelectedPart
 
                    end
 
                    end)
 
                end)



-- Your existing code goes here

-- Function to create a GUI
local function CreateGUI()
    -- Create a new ScreenGui for the GUI
    local GUI = Instance.new("ScreenGui")
    GUI.Name = "DaHoodGUI"
    GUI.ResetOnSpawn = false
    GUI.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")

    -- Frame for the main GUI content
    local Frame = Instance.new("Frame")
    Frame.Size = UDim2.new(0, 200, 0, 100)
    Frame.Position = UDim2.new(0.5, -100, 0.5, -50)
    Frame.BackgroundColor3 = Color3.new(0, 0, 0) -- Black background
    Frame.BorderSizePixel = 0
    Frame.Parent = GUI

    -- Toggle button for enabling/disabling the script
    local ToggleButton = Instance.new("TextButton")
    ToggleButton.Size = UDim2.new(0, 150, 0, 30)
    ToggleButton.Position = UDim2.new(0.5, -75, 0, 10)
    ToggleButton.BackgroundColor3 = Color3.new(1, 0, 0) -- Red background
    ToggleButton.BorderSizePixel = 0
    ToggleButton.Text = "Script: OFF"
    ToggleButton.TextColor3 = Color3.new(1, 1, 1)
    ToggleButton.Parent = Frame

    local ScriptEnabled = false -- Track script state

    -- Function to toggle the script on/off
    local function ToggleScript()
        ScriptEnabled = not ScriptEnabled
        if ScriptEnabled then
            ToggleButton.Text = "Script: ON"
            Aiming.Enabled = true
        else
            ToggleButton.Text = "Script: OFF"
            Aiming.Enabled = false
        end
    end

    ToggleButton.MouseButton1Click:Connect(ToggleScript)

    -- Slider for adjusting the Silent Aim Circle FOV
    local Slider = Instance.new("TextButton")
    Slider.Size = UDim2.new(0, 150, 0, 30)
    Slider.Position = UDim2.new(0.5, -75, 0, 50)
    Slider.BackgroundColor3 = Color3.new(1, 1, 1)
    Slider.BorderSizePixel = 0
    Slider.Text = "Silent Aim Circle FOV: 55"
    Slider.TextColor3 = Color3.new(0, 0, 0)
    Slider.Parent = Frame

    local MinValue = 1
    local MaxValue = 100
    local Default = 55
    local Increase = 1
    local FOVValue = Default -- Initial FOV value

    -- Function to set FOV value and update the text
    local function SetFOVValue(value)
        FOVValue = math.clamp(value, MinValue, MaxValue)
        Slider.Text = "Silent Aim Circle FOV: " .. tostring(FOVValue)
    end

    Slider.MouseButton1Click:Connect(function()
        SetFOVValue(Default) -- Reset FOV value when clicked
    end)

    -- Callback function for the slider
    Slider.MouseButton1Down:Connect(function()
        local Mouse = game.Players.LocalPlayer:GetMouse()
        local function UpdateSlider()
            local MouseX = Mouse.X
            local SliderPosX = Slider.AbsolutePosition.X
            local SliderSizeX = Slider.AbsoluteSize.X
            local SliderRange = MaxValue - MinValue
            local NewValue = math.floor((MouseX - SliderPosX) / SliderSizeX * SliderRange) + MinValue
            SetFOVValue(NewValue)
        end
        UpdateSlider()
        local Connection = game:GetService("RunService").RenderStepped:Connect(UpdateSlider)
        Mouse.MouseButton1Up:Wait()
        Connection:Disconnect()
    end)

    -- Minimize button
    local MinimizeButton = Instance.new("TextButton")
    MinimizeButton.Size = UDim2.new(0, 20, 0, 20)
    MinimizeButton.Position = UDim2.new(1, -25, 0, 5)
    MinimizeButton.BackgroundColor3 = Color3.new(1, 0, 0)
    MinimizeButton.BorderSizePixel = 0
    MinimizeButton.Text = "-"
    MinimizeButton.TextColor3 = Color3.new(1, 1, 1)
    MinimizeButton.Parent = Frame

    local Minimized = false -- Track minimized state

    -- Function to minimize/maximize the GUI
    local function ToggleMinimize()
        Minimized = not Minimized
        Frame.Size = Minimized and UDim2.new(0, 200, 0, 30) or UDim2.new(0, 200, 0, 100)
    end

    MinimizeButton.MouseButton1Click:Connect(ToggleMinimize)

    -- Close button
    local CloseButton = Instance.new("TextButton")
    CloseButton.Size = UDim2.new(0, 20, 0, 20)
    CloseButton.Position = UDim2.new(1, -25, 0, 35)
    CloseButton.BackgroundColor3 = Color3.new(1, 0, 0)
    CloseButton.BorderSizePixel = 0
    CloseButton.Text = "X"
    CloseButton.TextColor3 = Color3.new(1, 1, 1)
    CloseButton.Parent = Frame

    -- Function to close the GUI
    local function CloseGUI()
        GUI:Destroy()
    end

    CloseButton.MouseButton1Click:Connect(CloseGUI)
end

-- Create the GUI
CreateGUI()

-- Rest of your existing code continues here
